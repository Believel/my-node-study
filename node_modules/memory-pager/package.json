{
  "_args": [
    [
      {
        "raw": "memory-pager@^1.0.2",
        "scope": null,
        "escapedName": "memory-pager",
        "name": "memory-pager",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "D:\\study\\2018\\Vue-project\\Imooc\\node_modules\\sparse-bitfield"
    ]
  ],
  "_cnpm_publish_time": 1508700691114,
  "_from": "memory-pager@^1.0.2",
  "_hasShrinkwrap": false,
  "_id": "memory-pager@1.1.0",
  "_location": "/memory-pager",
  "_nodeVersion": "8.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/memory-pager-1.1.0.tgz_1508700690189_0.6682389550842345"
  },
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "memory-pager@^1.0.2",
    "scope": null,
    "escapedName": "memory-pager",
    "name": "memory-pager",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sparse-bitfield"
  ],
  "_resolved": "http://registry.npm.taobao.org/memory-pager/download/memory-pager-1.1.0.tgz",
  "_shasum": "9308915e0e972849fefbae6f8bc95d6b350e7344",
  "_shrinkwrap": null,
  "_spec": "memory-pager@^1.0.2",
  "_where": "D:\\study\\2018\\Vue-project\\Imooc\\node_modules\\sparse-bitfield",
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/memory-pager/issues"
  },
  "dependencies": {},
  "description": "Access memory using small fixed sized buffers",
  "devDependencies": {
    "standard": "^9.0.0",
    "tape": "^4.6.3"
  },
  "directories": {},
  "dist": {
    "shasum": "9308915e0e972849fefbae6f8bc95d6b350e7344",
    "size": 2665,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/memory-pager/download/memory-pager-1.1.0.tgz"
  },
  "gitHead": "500039368d57728f723b03b7f4ea873756c33e87",
  "homepage": "https://github.com/mafintosh/memory-pager",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    }
  ],
  "name": "memory-pager",
  "optionalDependencies": {},
  "publish_time": 1508700691114,
  "readme": "# memory-pager\n\nAccess memory using small fixed sized buffers instead of allocating a huge buffer.\nUseful if you are implmenting sparse data structures (such as large bitfield).\n\n![travis](https://travis-ci.org/mafintosh/memory-pager.svg?branch=master)\n\n```\nnpm install memory-pager\n```\n\n## Usage\n\n``` js\nvar pager = require('paged-memory')\n\nvar pages = pager(1024) // use 1kb per page\n\nvar page = pages.get(10) // get page #10\n\nconsole.log(page.offset) // 10240\nconsole.log(page.buffer) // a blank 1kb buffer\n```\n\n## API\n\n#### `var pages = pager(pageSize)`\n\nCreate a new pager. `pageSize` defaults to `1024`.\n\n#### `var page = pages.get(pageNumber, [noAllocate])`\n\nGet a page. The page will be allocated at first access.\n\nOptionally you can set the `noAllocate` flag which will make the\nmethod return undefined if no page has been allocated already\n\nA page looks like this\n\n``` js\n{\n  offset: byteOffset,\n  buffer: bufferWithPageSize\n}\n```\n\n#### `pages.set(pageNumber, buffer)`\n\nExplicitly set the buffer for a page.\n\n#### `pages.updated(page)`\n\nMark a page as updated.\n\n#### `pages.lastUpdate()`\n\nGet the last page that was updated.\n\n#### `var buf = pages.toBuffer()`\n\nConcat all pages allocated pages into a single buffer\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/memory-pager.git"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "version": "1.1.0"
}
